{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst useCanvasDraw = (ref, socket) => {\n  _s();\n\n  const [isPainting, setIsPainting] = useState(false);\n  const [mousePos, setMousePos] = useState(undefined);\n  const [color, setColor] = useState(\"black\");\n  const [lineWidth, setLineWidth] = useState(5); // get the mouse position\n\n  const getCoordinates = event => {\n    if (!ref.current) return;\n    const canvas = ref.current;\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  const drawLocal = (mousePos, newMousePos, color, lineWidth) => {\n    if (!ref.current) return;\n    const canvas = ref.current;\n    const context = canvas.getContext(\"2d\");\n\n    if (context) {\n      context.strokeStyle = color;\n      context.lineJoin = \"round\";\n      context.lineWidth = lineWidth;\n      context.beginPath();\n      context.moveTo(mousePos.x, mousePos.y);\n      context.lineTo(newMousePos.x, newMousePos.y);\n      context.closePath();\n      context.stroke();\n    }\n  };\n\n  if (socket) {\n    socket.on(\"draw\", (mousePos, newMousePos, color, lineWidth) => {\n      console.log(\"receive\");\n      drawLocal(mousePos, newMousePos, color, lineWidth);\n    });\n  }\n\n  const drawLine = (mousePos, newMousePos, color, lineWidth) => {\n    drawLocal(mousePos, newMousePos, color, lineWidth);\n\n    if (socket) {\n      console.log(\"send\");\n      socket.emit(\"draw\", mousePos, newMousePos, color, lineWidth);\n    }\n  };\n\n  const startPaint = useCallback(event => {\n    const coordinates = getCoordinates(event);\n\n    if (coordinates) {\n      setIsPainting(true);\n      setMousePos(coordinates);\n    }\n  }, []);\n  const paint = useCallback(event => {\n    if (isPainting) {\n      const newMousePos = getCoordinates(event);\n\n      if (mousePos && newMousePos) {\n        drawLine(mousePos, newMousePos, color, lineWidth);\n        setMousePos(newMousePos);\n      }\n    }\n  }, [isPainting, mousePos]);\n  const cancelPaint = useCallback(() => {\n    setIsPainting(false);\n  }, []);\n  useEffect(() => {\n    if (!ref.current) return;\n    const canvas = ref.current;\n    canvas.addEventListener(\"mousedown\", startPaint);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startPaint);\n    };\n  }, [startPaint, ref]); // draw the line on mouse move\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const canvas = ref.current;\n    canvas.addEventListener(\"mousemove\", paint);\n    return () => {\n      canvas.removeEventListener(\"mousemove\", paint);\n    };\n  }, [paint, ref]); // stop drawing on mouse release\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const canvas = ref.current;\n    canvas.addEventListener(\"mouseup\", cancelPaint);\n    canvas.addEventListener(\"mouseleave\", cancelPaint);\n    return () => {\n      canvas.removeEventListener(\"mouseup\", cancelPaint);\n      canvas.removeEventListener(\"mouseleave\", cancelPaint);\n    };\n  }, [cancelPaint, ref]);\n  return [setColor, setLineWidth];\n};\n\n_s(useCanvasDraw, \"3P2FDg8L5N2wZDwffBjspZGbUy0=\");\n\nexport default useCanvasDraw;","map":{"version":3,"names":["useCallback","useEffect","useState","useCanvasDraw","ref","socket","isPainting","setIsPainting","mousePos","setMousePos","undefined","color","setColor","lineWidth","setLineWidth","getCoordinates","event","current","canvas","x","pageX","offsetLeft","y","pageY","offsetTop","drawLocal","newMousePos","context","getContext","strokeStyle","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","on","console","log","drawLine","emit","startPaint","coordinates","paint","cancelPaint","addEventListener","removeEventListener"],"sources":["/Users/ghy/cs/program/draw-guess-together/src/hooks/useCanvasDraw.ts"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Socket } from \"socket.io-client\";\n\ntype Coordinate = {\n  x: number;\n  y: number;\n};\n\nconst useCanvasDraw = (\n  ref: React.RefObject<HTMLCanvasElement>,\n  socket: Socket\n) => {\n  const [isPainting, setIsPainting] = useState(false);\n  const [mousePos, setMousePos] = useState<Coordinate | undefined>(undefined);\n  const [color, setColor] = useState(\"black\");\n  const [lineWidth, setLineWidth] = useState(5);\n\n  // get the mouse position\n  const getCoordinates = (event: MouseEvent): Coordinate | undefined => {\n    if (!ref.current) return;\n\n    const canvas = ref.current;\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop,\n    };\n  };\n\n  const drawLocal = (\n    mousePos: Coordinate,\n    newMousePos: Coordinate,\n    color: CanvasFillStrokeStyles[\"strokeStyle\"],\n    lineWidth: number\n  ) => {\n    if (!ref.current) return;\n\n    const canvas = ref.current;\n    const context = canvas.getContext(\"2d\");\n\n    if (context) {\n      context.strokeStyle = color;\n      context.lineJoin = \"round\";\n      context.lineWidth = lineWidth;\n\n      context.beginPath();\n      context.moveTo(mousePos.x, mousePos.y);\n      context.lineTo(newMousePos.x, newMousePos.y);\n      context.closePath();\n\n      context.stroke();\n    }\n  };\n\n  if (socket) {\n    socket.on(\"draw\", (mousePos, newMousePos, color, lineWidth) => {\n      console.log(\"receive\");\n      drawLocal(mousePos, newMousePos, color, lineWidth);\n    });\n  }\n\n  const drawLine = (\n    mousePos: Coordinate,\n    newMousePos: Coordinate,\n    color: CanvasFillStrokeStyles[\"strokeStyle\"],\n    lineWidth: number\n  ) => {\n    drawLocal(mousePos, newMousePos, color, lineWidth);\n    if (socket) {\n      console.log(\"send\");\n      socket.emit(\"draw\", mousePos, newMousePos, color, lineWidth);\n    }\n  };\n\n  const startPaint = useCallback((event: MouseEvent) => {\n    const coordinates = getCoordinates(event);\n    if (coordinates) {\n      setIsPainting(true);\n      setMousePos(coordinates);\n    }\n  }, []);\n\n  const paint = useCallback(\n    (event: MouseEvent) => {\n      if (isPainting) {\n        const newMousePos = getCoordinates(event);\n        if (mousePos && newMousePos) {\n          drawLine(mousePos, newMousePos, color, lineWidth);\n          setMousePos(newMousePos);\n        }\n      }\n    },\n    [isPainting, mousePos]\n  );\n\n  const cancelPaint = useCallback(() => {\n    setIsPainting(false);\n  }, []);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const canvas: HTMLCanvasElement = ref.current;\n    canvas.addEventListener(\"mousedown\", startPaint);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startPaint);\n    };\n  }, [startPaint, ref]);\n\n  // draw the line on mouse move\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const canvas = ref.current;\n    canvas.addEventListener(\"mousemove\", paint);\n    return () => {\n      canvas.removeEventListener(\"mousemove\", paint);\n    };\n  }, [paint, ref]);\n\n  // stop drawing on mouse release\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const canvas = ref.current;\n    canvas.addEventListener(\"mouseup\", cancelPaint);\n    canvas.addEventListener(\"mouseleave\", cancelPaint);\n    return () => {\n      canvas.removeEventListener(\"mouseup\", cancelPaint);\n      canvas.removeEventListener(\"mouseleave\", cancelPaint);\n    };\n  }, [cancelPaint, ref]);\n\n  return [setColor, setLineWidth];\n};\n\nexport default useCanvasDraw;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}