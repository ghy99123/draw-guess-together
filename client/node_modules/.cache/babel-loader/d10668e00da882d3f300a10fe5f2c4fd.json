{"ast":null,"code":"var _jsxFileName = \"/Users/ghy/cs/program/draw-guess-together/src/components/ChatBox/ChatBox.tsx\";\nimport React from \"react\";\nimport { Input, List } from \"antd\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = props => {\n  const {\n    tooltip,\n    placeholder,\n    list\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dataSource: list,\n        split: false,\n        size: \"small\",\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          children: item.value\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","Input","List","ChatBox","props","tooltip","placeholder","list","item","value","id"],"sources":["/Users/ghy/cs/program/draw-guess-together/src/components/ChatBox/ChatBox.tsx"],"sourcesContent":["import React from \"react\";\nimport { Input, List } from \"antd\";\nimport \"./style.css\";\n\ninterface Props {\n  tooltip: string;\n  placeholder: string;\n  list: any;\n}\n\nconst ChatBox: React.FC<Props> = (props: Props) => {\n  const { tooltip, placeholder, list } = props;\n  \n  return (\n    <div className=\"chat-box-container\">\n      <div className=\"tooltip\">{tooltip}</div>\n      <div className=\"message-box\">\n        <List\n          dataSource={list}\n          split={false}\n          size=\"small\"\n          renderItem={(item: any) => (\n            <List.Item key={item.id}>{item.value}</List.Item>\n          )}\n        />\n      </div>\n      <Input placeholder={placeholder} />\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAO,aAAP;;;AAQA,MAAMC,OAAwB,GAAIC,KAAD,IAAkB;EACjD,MAAM;IAAEC,OAAF;IAAWC,WAAX;IAAwBC;EAAxB,IAAiCH,KAAvC;EAEA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,SAAf;MAAA,UAA0BC;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE,QAAC,IAAD;QACE,UAAU,EAAEE,IADd;QAEE,KAAK,EAAE,KAFT;QAGE,IAAI,EAAC,OAHP;QAIE,UAAU,EAAGC,IAAD,iBACV,QAAC,IAAD,CAAM,IAAN;UAAA,UAA0BA,IAAI,CAACC;QAA/B,GAAgBD,IAAI,CAACE,EAArB;UAAA;UAAA;UAAA;QAAA;MALJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE,QAAC,KAAD;MAAO,WAAW,EAAEJ;IAApB;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAnBD;;KAAMH,O;AAqBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}